<?php

namespace AppBundle\Repository;

use AppBundle\Entity\lesDemandes;

/**
 * lesDemandesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class lesDemandesRepository extends \Doctrine\ORM\EntityRepository
{
    public function getEpiWithDemande()
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select(array('ld','li','dem','tech'))
          //->distinct('.')
          ->from(lesDemandes::class, 'ld')
          ->join('ld.ligneD', 'li')
          ->join('ld.technicien', 'tech')
          ->join('ld.demandeur', 'dem')
          ->join('li.epi', 'epi')
          ->orderBy('ld.date', 'DESC')
      ;
        $query = $qb->getQuery();
        return $query->getResult();
    }
    public function getDatesAllDemandes()
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select("DATE_FORMAT(ld.date, '%d/%m/%Y') as date")
          ->from(lesDemandes::class, 'ld')
          ->groupBy("date")
          ->orderBy('ld.date', 'DESC')
      ;
        $query = $qb->getQuery();
        return array_column($query->getScalarResult(), "date");
        ;
    }

    /*  public function selectTechniciens()
      {
          $qb = $this->getEntityManager()->createQueryBuilder();
          $qb->select(array('tech'))
            //->distinct('.')
            ->from(lesDemandes::class, 'ld')
            ->join('ld.technicien', 'tech')
            ->orderBy('ld.date')
        ;
          $query = $qb->getQuery();
          return $query->getResult();
      }*/

    public function getDateBetween2($firstDate, $technicien, $demandeur, $statut)
    {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select("ld")
        ->from(lesDemandes::class, 'ld');

        if ($firstDate) {
            $endDate = clone $firstDate;
            $endDate->modify('+1 day');
            $qb->andwhere($qb->expr()->between(
                  'ld.date',
                  ':un',
                  ':deux'
              ))
              ->setParameter('un', $firstDate)
              ->setParameter('deux', $endDate);
        }

        if ($technicien) {
            $qb->andwhere('ld.technicien = :tech')
                ->setParameter('tech', $technicien);
        }
        if ($demandeur) {
            $qb->andwhere('ld.demandeur = :dem')
                ->setParameter('dem', $demandeur);
        }

        if ($statut !== null) {
            $qb->andwhere('ld.valide = :valide')
          ->setParameter('valide', $statut);
        }


        $query = $qb->getQuery();
        return $query->getResult();
    }
}
